{
    "collab_server" : "",
    "contents" : "#install.packages(\"RGoogleAnalytics\")\nrequire(devtools)\n#devtools::install_github(\"Tatvic/RGoogleAnalytics\")\n#devtools::install_github(\"Tatvic/RGoogleAnalytics\")\n#install.packages(\"googleAuthR\")\n# if(!require(googleAuthR)){\n#   if(!require(devtools)){\n#     install.packages(\"devtools\")\n#   } else {\n#     devtools::install_github(\"MarkEdmondson1234/googleAuthR\")\n#   }\n# }\nlibrary(googleAuthR)\nrequire(RGoogleAnalytics)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(optparse)\nlibrary(ggplot2)\noptions(\"googleAuthR.scopes.selected\" = c(\"https://www.googleapis.com/auth/analytics\"))\noptions(\"googleAuthR.client_id\" = \"908916142832-bf3o6rpn8phh344booolr1ovfla7ea9p.apps.googleusercontent.com\")\noptions(\"googleAuthR.client_secret\" = \"MlS4oatMCIMqzI3bpvWMeH3W\")\n# googleAuthR::gar_auth()\nservice_token <- gar_auth_service(\"C:/Users/Lily/Documents/GA/R/key_secrets.json\", scope=getOption(\"googleAuthR.scopes.selected\"))\n\n# Authorize the Google Analytics account\n# This need not be executed in every session once the token object is created \n# and saved\nclient.id = \"908916142832-bf3o6rpn8phh344booolr1ovfla7ea9p.apps.googleusercontent.com\"\nclient.secret = \"MlS4oatMCIMqzI3bpvWMeH3W\"\ntoken <- Auth(client.id,client.secret)\ninvisible(GetProfiles(token))\n# Save the token object for future sessions\n# save(token,file=\"./token_file\")\n\n# In future sessions it can be loaded by running load(\"./token_file\")\n\n# ValidateToken(token)\n\noption_list <- list(\n  make_option(c(\"-s\", \"--stime\"), type=\"character\", default=\"2017-03-01\",\n              help=\"start time as [default= %default]\", metavar=\"character\"),\n  make_option(c(\"-e\", \"--etime\"), type=\"character\", default=\"2017-03-31\",\n              help=\"end time as [default= %default]\", metavar=\"character\"),\n  make_option(c(\"-t\", \"--tit\"), type=\"character\", default=\"Mar\",\n              help=\"month as [default= %default]\", metavar=\"character\")\n)\n\nopt_parser <- OptionParser(option_list=option_list)\nopt <- parse_args(opt_parser)\nsetwd('C:/Users/Lily/Documents/GA/R/report/2017/')\nstime <- opt$stime\netime <- opt$etime\ntit <- opt$tit\n# stime <- \"2017-03-01\"\n# etime <- \"2017-03-31\"\n# tit <- \"Mar\"\n\nlibrary(XML)\ntheurl <- \"http://srcqnap.qnap.com.tw/en/product/_info.php\"\n\nhtml <- htmlParse(theurl)\nsched <- readHTMLTable(html, stringsAsFactors = FALSE)\nproduct <- readHTMLTable(html, stringsAsFactors = FALSE)[[2]]# 2nd table\n#product <- as.data.frame(lapply(product, function(x) iconv(x, \"UTF-8\", \"BIG-5\")))\ncolnames(product) <- c(\"Model_ID\", \"Model_name\", \"time\", \"main_type\", \"sub_type\", \"type\", \"series\", \"history\", \"support\")\nwrite.csv(product, \"table.csv\") \nIDs <- product$Model_ID\n#IDs <- product[,\"Model_ID\"]\n\nkeyclass <- unique(product$main_type)\n\n#32國當月份流量前三機種\nmyfunction_countsessions <- function(ID,data){\n  S <- sum(data$sessions[grep(paste(\"II=\\\\b\", ID, \"\\\\b\", sep=\"\"), data$urls)])\n  return(S)\n}\n#sapply(IDs, myfunction_countsessions,result.data)\nmyfunction_top3 <- function(cname, stime, etime){\n  #print(paste(cname,'HI'))\n  query.list <- Init(table.id = \"ga:3035421\", \n                     start.date = stime,\n                     end.date = etime, \n                     dimensions=\"ga:pagePath\", \n                     metrics=\"ga:sessions\",\n                     sort=\"ga:pagePath\",\n                     max.results = 10000,\n                     segment = paste(\"sessions::condition::ga:country=@\", cname, sep = \"\"),\n                     filters = \"ga:pagePath=~/model\\\\.php\\\\?II=\")\n  ga.query <- QueryBuilder(query.list)\n  gaData <- GetReportData(ga.query, token)\n  write.csv(gaData, paste(\"Monthly/\",tit,\"/top3_dat/\", cname,\".csv\", sep=\"\")) \n  result.data <- data.frame(urls = gaData$pagePath, sessions = gaData$sessions)\n  SUMs <- sapply(IDs, myfunction_countsessions,result.data)\n  print(str(SUMs))\n  table <- data.frame(Model_ID = rownames(data.frame(SUMs)), sum = SUMs)\n  rownames(table) <- 1:nrow(table)\n  #modelmain_type <- product[match(table$Model_ID, product$Model_ID), ][4]\n  table[3] <- product[match(table$Model_ID, product$Model_ID), ][4]\n  HomeSOHO_table <- table[table$main_type==\"Home & SOHO\",]\n  SMB_table <- table[table$main_type==\"SMB\",]\n  Enterprise_table <- table[table$main_type==\"Enterprise\",]\n  #other_table <- table[table$main_type==\"\",]\n  \n  HomeSOHO_top3 <- HomeSOHO_table[with(HomeSOHO_table,order(-sum)),][1:3,]\n  SMB_top3 <- SMB_table[with(SMB_table,order(-sum)),][1:3,]\n  Enterprise_top3 <- Enterprise_table[with(Enterprise_table,order(-sum)),][1:3,]\n  #other_top3 <- other_table[with(other_table,order(-sum)),][1:3,]\n  \n  HomeSOHO_top3_modelname <- product[match(HomeSOHO_top3$Model_ID, product$Model_ID),][,c(1:2,4)]\n  SMB_top3_modelname <- product[match(SMB_top3$Model_ID, product$Model_ID),][,c(1:2,4)]\n  Enterprise_top3_modelname <- product[match(Enterprise_top3$Model_ID, product$Model_ID),][,c(1:2,4)]\n  #other_top3_modelname <- product[match(other_top3$Model_ID, product$Model_ID),][,c(1:2,4)]\n  \n  HomeSOHO_top3_result <- merge(HomeSOHO_top3,HomeSOHO_top3_modelname)\n  SMB_top3_result <- merge(SMB_top3,SMB_top3_modelname)\n  Enterprise_top3_result <- merge(Enterprise_top3,Enterprise_top3_modelname)\n  #other_top3_result <- merge(other_top3,other_top3_modelname)\n  result <- c(HomeSOHO_top3_result,SMB_top3_result,Enterprise_top3_result)#,other_top3_result)\n  return(result)\n}#return top3 ID & sum of sessions\n\nclist <- list(\"Australia\",\"Austria\",\"Belgium\",\"Canada\",\"Czechia\",\"Denmark\",\"France\",\"Germany\",\"Greece\",\"Hong Kong\",\"Hungary\",\"India\",\"Iran\",\"Israel\",\"Italy\",\"Japan\",\"Mexico\",\"Netherlands\",\"Norway\",\"Poland\",\"Portugal\",\"Romania\",\"South Africa\",\"South Korea\",\"Spain\",\"Sweden\",\"Switzerland\",\"Taiwan\",\"Thailand\",\"Turkey\",\"United Kingdom\",\"United States\")\n\nTOP3_IDs <- sapply(clist, myfunction_top3, stime, etime)\nresult_TOP3 <- data.frame(sapply(TOP3_IDs, as.character), stringsAsFactors=FALSE)\nconame <- c(\"ID\",\"type\",\"sessions\",\"model\")\nCLIST <- c()\nfor(i in 1:32){\n  if(i==1){\n    CLIST[1:12] <- paste(clist[1],coname,sep=\".\") }else{\n      CLIST[(12*i-11):(12*i)] <- paste(clist[i],coname,sep=\".\") \n    }\n}\n\ncolnames(result_TOP3) <- CLIST\nwrite.csv(result_TOP3, paste(\"Monthly/\",tit,\"/top3_dat/top3.csv\", sep=\"\")) \nt_top3 <- t(result_TOP3)\n\n\nmakeplotfunction <- function(i,cname){ \n  countryname <- data.frame(t(cbind(t_top3[i:(i+3),],t_top3[(i+4):(i+7),],t_top3[(i+8):(i+11),])), country = cname)\n  colnames(countryname) <- c(\"ID\",\"type\",\"sessions\",\"model\",\"country\")\n  #print(head(countryname))\n  countryname$sessions = as.double(levels(countryname$sessions))[countryname$sessions] \n  p1 <- ggplot(countryname[1:3,], aes(model, sessions)) + \n    geom_bar(stat=\"identity\", position=\"dodge\", width=0.5, fill=\"#FF6600\") +   \n    theme(axis.text.x = element_text(angle = 15, hjust = 1), title = element_text(size = 10)) +\n    labs(title = \"Home & SOHO\")\n  p2 <- ggplot(countryname[4:6,], aes(model, sessions)) + \n    geom_bar(stat=\"identity\", position=\"dodge\", width=0.5, fill=\"#0099FF\") +   \n    theme(axis.text.x = element_text(angle = 15, hjust = 1), title = element_text(size = 10)) +\n    labs(title = \"SMB\")\n  p3 <- ggplot(countryname[7:9,], aes(model, sessions)) + \n    geom_bar(stat=\"identity\", position=\"dodge\", width=0.5, fill=\"#9933FF\") +   \n    theme(axis.text.x = element_text(angle = 15, hjust = 1), title = element_text(size = 10)) +\n    labs(title = \"Enterprise\")\n  #p4 <- ggplot(countryname[10:12,], aes(model, sessions)) + \n   # geom_bar(stat=\"identity\", position=\"dodge\", width=0.5, fill=\"#00CC66\") +   \n    #theme(axis.text.x = element_text(angle = 15, hjust = 1), title = element_text(size = 10)) +\n    #labs(title = \"Other\")\n  title=textGrob(as.character(cname), gp=gpar(fontsize=15))#fontface=\"bold\")\n  A1 <- grid.arrange(p1, p2, p3, ncol = 2, top = title)\n  print(\"plot!\")\n  ggsave(paste(\"Monthly/\", tit, \"/top3/Top3__\", cname, \".png\", sep = \"\"), A1)\n  return(A1) \n}\n\ni <- seq(from=1, to=384, by=12)\nRE <- mapply(makeplotfunction, i, clist)\n\nj <- seq(from=1, to=32, by=4)\nk <- c(1:8)\ngridfunction <- function(i,j){\n  title1 <- textGrob(paste(\"Top 3 products (\", tit,\" 2017)\", sep=\"\"), gp=gpar(fontsize=20, font=2), just = \"top\")#fontface=\"bold\")\n  B1 <- grid.arrange(ncol = 2,grobs=c(RE[i:(i+3)]),top = title1)\n  ggsave(paste(\"Monthly/\", tit, \"/top3/00\", j, \".png\", sep=\"\"), B1, scale=2)\n  return(B1)\n}\nRE2 <- mapply(gridfunction, j, k)\n\n# title1=textGrob(paste(\"Top 3 products (\", tit, \" 2017)\"), gp=gpar(fontsize=20, font=2), just = \"top\")\n# B1 <- grid.arrange(ncol = 2, grobs=c(RE[9:12]), top = title1)\n# j <- \"03\"\n# ggsave(paste(\"./report/Monthly/20170201-20170228/top3/00\",j,\".png\",sep=\"\"),B1,scale=2)\n",
    "created" : 1491806186751.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2788841322",
    "id" : "A46307DA",
    "lastKnownWriteTime" : 1491356488,
    "last_content_update" : 1491356488,
    "path" : "~/GA/R/scripts/Top3_report_monthly.R",
    "project_path" : "Top3_report_monthly.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}